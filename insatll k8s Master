  _           _        _ _   _  __     _                     _             
 (_)         | |      | | | | |/ /    | |                   | |            
  _ _ __  ___| |_ __ _| | | | ' /_   _| |__   ___ _ __ _ __ | |_ ___  ___  
 | | '_ \/ __| __/ _` | | | |  <| | | | '_ \ / _ \ '__| '_ \| __/ _ \/ __| 
 | | | | \__ \ || (_| | | | | . \ |_| | |_) |  __/ |  | | | | ||  __/\__ \ 
 |_|_| |_|___/\__\__,_|_|_| |_|\_\__,_|_.__/ \___|_|  |_| |_|\__\___||___/ 
                                                                           
                                                                           
                                                                           
  
  # update sytsme
  sudo apt-get update
  
# tueroff swap
sudo swapoff –a
nano /etc/fstab

# install curl and auther tools 
  sudo apt-get install  apt-transport-https curl
  
  # install Contaier-Engien we use Docker
  sudo apt-get install docker.io

# enbale Docker
sudo systemctl enable docker
sudo systemctl start docker
sudo systemctl status docker

# download use the key 
  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
 
# add this script
cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb http://apt.kubernetes.io/ kubernetes-xenial main
EOF

# do now update 
apt-get update
  
# install Kuberntes Repositer " where i can find kuberntes !"
sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"

# install kubeadml kubectl and auter k8s tools to manage esay Cluster.
sudo apt-get install kubeadm kubelet kubectl

# Updating Kubernetes Configuration
 nano /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
add this line :
Environment=”cgroup-driver=systemd/cgroup-driver=cgroupfs”

# network deploy " the node its take  IP from this range"
 kubeadm init --apiserver-advertise-address=<ip-address-of-kmaster-vm> --pod-network-cidr=192.168.1.0/24

# enable use kuberntes by any  user " non root" ... create copy of config file  
mkdir -p $HOME/.kube
$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
$ sudo chown $(id -u):$(id -g) $HOME/.kube/config



  
  # Calico Netwsork Project 
  kubectl apply -f https://docs.projectcalico.org/v3.9/manifests/calico.yaml


# Finsh 
# Join nod 


